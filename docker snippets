

Set Up:
	Install docker engine runtime: https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
	Install docker desktop.
	
## Instalar Docker

# Add Docker's official GPG key:
	sudo apt-get update
	sudo apt-get install ca-certificates curl
	sudo install -m 0755 -d /etc/apt/keyrings
	sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
	sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
	echo \
	  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
	  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
	  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	sudo apt-get update


	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

	sudo docker run hello-world


argumentos:
-p: mapear porta local para a do container (local:docker)
-e: especificar uma variavel de ambiente (VAR_1=abc)
--cpuset-cpus="0-2": limitar nucleos de cpu para o container

//rodar rabbit MQ
docker run -d --name rabbitMQ -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin  rabbitmq:3-management


//mysql
docker run --name mysql_instance -p 3306:3306 -e MYSQL_ROOT_PASSWORD=admin --cpus=1.5 -d mysql:8.0-debian


//postgreSQL
docker run --name postgreSQL -p 5432:5432 -e POSTGRES_PASSWORD=admin --cpus=1.5 -d postgres:bullseye

//MongoDB
docker run -d -p 27017:27017 -p 28017:28017 -e AUTH=no tutum/mongodb
docker run --name mongodb_main -p 27017:27017 -e AUTH=no -d mongo:4.4.27-focal

// REDIS 
docker run -d --name redis-stack-server -p 6379:6379 redis/redis-stack-server:latest

